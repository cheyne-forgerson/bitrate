{"ast":null,"code":"var _jsxFileName = \"/Users/qlab/Documents/Forgerson/WebDev/Apps/bitzprice/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'USD'\n    });\n  }\n\n  render() {\n    let list = '';\n\n    if (this.state.current === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.USD.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 19\n        }\n      }, this.props.bpi.USD.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, \" \", this.props.bpi.USD.rate));\n    } else if (this.state.current === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, \" \", this.props.bpi.GBP.rate));\n    } else if (this.state.current === 'EUR') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \" \", this.props.bpi.EUR.rate));\n    }\n\n    ;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, list));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["/Users/qlab/Documents/Forgerson/WebDev/Apps/bitzprice/components/Prices.js"],"names":["Prices","React","Component","currency","render","list","state","current","props","bpi","USD","description","code","rate","GBP","EUR"],"mappings":";;;;;;AAAA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACzB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADyB;AAAA;;AAKjCC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,KAA1B,EAAiC;AAC7BF,MAAAA,IAAI,GACJ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsB,KAAKG,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WADzC,QAEM;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IADtB,CAFN,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA7B,CALJ,CADA;AAQH,KATD,MASO,IAAG,KAAKP,KAAL,CAAWC,OAAX,KAAuB,KAA1B,EAAiC;AACpCF,MAAAA,IAAI,GACJ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsB,KAAKG,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WADzC,QAEM;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IADtB,CAFN,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA7B,CALJ,CADA;AAQH,KATM,MASA,IAAG,KAAKP,KAAL,CAAWC,OAAX,KAAuB,KAA1B,EAAiC;AACpCF,MAAAA,IAAI,GACJ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACsB,KAAKG,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WADzC,QAEM;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IADtB,CAFN,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA7B,CALJ,CADA;AAQH;;AAAA;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,IADL,CADJ,CADJ;AAOH;;AA5CgC;;AA+CrC,eAAeL,MAAf","sourcesContent":["class Prices extends React.Component {\n    state = {\n        currency: 'USD'\n    }\n\n    render() {\n        let list = '';\n\n        if(this.state.current === 'USD') {\n            list = \n            <li className=\"list-group-item\">\n                Bitcoin rate for {this.props.bpi.USD.description}\n                : <span className=\"badge badge-primary\">\n                    {this.props.bpi.USD.code}\n                </span>\n                <strong> {this.props.bpi.USD.rate}</strong>\n            </li>\n        } else if(this.state.current === 'GBP') {\n            list = \n            <li className=\"list-group-item\">\n                Bitcoin rate for {this.props.bpi.GBP.description}\n                : <span className=\"badge badge-primary\">\n                    {this.props.bpi.GBP.code}\n                </span>\n                <strong> {this.props.bpi.GBP.rate}</strong>\n            </li>\n        } else if(this.state.current === 'EUR') {\n            list = \n            <li className=\"list-group-item\">\n                Bitcoin rate for {this.props.bpi.EUR.description}\n                : <span className=\"badge badge-primary\">\n                    {this.props.bpi.EUR.code}\n                </span>\n                <strong> {this.props.bpi.EUR.rate}</strong>\n            </li>\n        };\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {list}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Prices;"]},"metadata":{},"sourceType":"module"}